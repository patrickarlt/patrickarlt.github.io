{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/src/js/lib/particles.js","js/src/js/main.js"],"names":[],"mappingsppBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"js/main.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* -----------------------------------------------\n/* Author : Vincent Garreau  - vincentgarreau.com\n/* MIT license: http://opensource.org/licenses/MIT\n/* GitHub : https://github.com/VincentGarreau/particles.js\n/* How to use? : Check the GitHub README\n/* v1.1.0\n/* ----------------------------------------------- */\n\nfunction launchParticlesJS(tag_id, params){\n\n  var canvas_el = document.querySelector('#'+tag_id+' > canvas');\n\n  /* particles.js variables with default values */\n  var pJS = {\n    canvas: {\n      el: canvas_el,\n      w: canvas_el.offsetWidth,\n      h: canvas_el.offsetHeight\n    },\n    particles: {\n      color: '#fff',\n      color_random: false,\n      shape: 'circle', // \"circle\", \"edge\" or \"triangle\"\n      opacity: {\n        opacity: 1,\n        anim: {\n          enable: false,\n          speed: 2,\n          opacity_min: 0,\n          sync: false\n        }\n      },\n      size: 2.5,\n      size_random: true,\n      nb: 200,\n      line_linked: {\n        enable_auto: true,\n        distance: 100,\n        color: '#fff',\n        opacity: 1,\n        width: 1,\n        condensed_mode: {\n          enable: false,\n          rotateX: 3000,\n          rotateY: 3000\n        }\n      },\n      anim: {\n        enable: true,\n        speed: 2\n      },\n      array: []\n    },\n    interactivity: {\n      enable: true,\n      mouse: {\n        distance: 100\n      },\n      detect_on: 'canvas',\n      mode: 'grab',\n      line_linked: {\n        opacity: 1\n      },\n      events: {\n        onclick: {\n          enable: true,\n          mode: 'push',\n          nb: 4\n        },\n        onresize: {\n          enable: true,\n          mode: 'out', // \"out\" or \"bounce\"\n          density_auto: false,\n          density_area: 800 // nb_particles = particles.nb * (canvas width *  canvas height / 1000) / density_area\n        }\n      }\n    },\n    retina_detect: false,\n    fn: {\n      vendors:{\n        interactivity: {}\n      }\n    }\n  };\n\n  /* params settings */\n  if(params){\n    if(params.particles){\n      var paramsForParticles = params.particles;\n      if(paramsForParticles.color) pJS.particles.color = paramsForParticles.color;\n      if(paramsForParticles.color_random) pJS.particles.color_random = paramsForParticles.color_random;\n      if(paramsForParticles.shape) pJS.particles.shape = paramsForParticles.shape;\n      if(paramsForParticles.opacity) {\n        var paramsForOpacity = paramsForParticles.opacity;\n        if(typeof paramsForOpacity == 'object') pJS.particles.opacity.opacity = paramsForOpacity.opacity;\n        else pJS.particles.opacity.opacity = paramsForOpacity;\n        if(paramsForOpacity.anim){\n          var paramsForOpacityAnim = paramsForOpacity.anim;\n          if(paramsForOpacityAnim.enable == false) pJS.particles.opacity.anim.enable = paramsForOpacityAnim.enable;\n          if(paramsForOpacityAnim.speed) pJS.particles.opacity.anim.speed = paramsForOpacityAnim.speed;\n          if(paramsForOpacityAnim.opacity_min) pJS.particles.opacity.anim.opacity_min = paramsForOpacityAnim.opacity_min;\n          if(paramsForOpacityAnim.sync == false) pJS.particles.opacity.anim.sync = paramsForOpacityAnim.sync;\n        }\n      }\n      if(paramsForParticles.size) pJS.particles.size = paramsForParticles.size;\n      if(paramsForParticles.size_random == false) pJS.particles.size_random = paramsForParticles.size_random;\n      if(paramsForParticles.nb) pJS.particles.nb = paramsForParticles.nb;\n      if(paramsForParticles.line_linked){\n        var paramsForLineLinked = paramsForParticles.line_linked;\n        if(paramsForLineLinked.enable_auto == false) pJS.particles.line_linked.enable_auto = paramsForLineLinked.enable_auto;\n        if(paramsForLineLinked.distance) pJS.particles.line_linked.distance = paramsForLineLinked.distance;\n        if(paramsForLineLinked.color) pJS.particles.line_linked.color = paramsForLineLinked.color;\n        if(paramsForLineLinked.opacity) pJS.particles.line_linked.opacity = paramsForLineLinked.opacity;\n        if(paramsForLineLinked.width) pJS.particles.line_linked.width = paramsForLineLinked.width;\n        if(paramsForLineLinked.condensed_mode){\n          var paramsForCondensedMode = paramsForLineLinked.condensed_mode;\n          if(paramsForCondensedMode.enable == false) pJS.particles.line_linked.condensed_mode.enable = paramsForCondensedMode.enable;\n          if(paramsForCondensedMode.rotateX) pJS.particles.line_linked.condensed_mode.rotateX = paramsForCondensedMode.rotateX;\n          if(paramsForCondensedMode.rotateY) pJS.particles.line_linked.condensed_mode.rotateY = paramsForCondensedMode.rotateY;\n        }\n      }\n      if(paramsForParticles.anim){\n        var paramsForAnim = paramsForParticles.anim;\n        if(paramsForAnim.enable == false) pJS.particles.anim.enable = paramsForAnim.enable;\n        if(paramsForAnim.speed) pJS.particles.anim.speed = paramsForAnim.speed;\n      }\n    }\n    if(params.interactivity){\n      var paramsForInteractivity = params.interactivity;\n      if(paramsForInteractivity.enable == false) pJS.interactivity.enable = paramsForInteractivity.enable;\n      if(paramsForInteractivity.mouse){\n        if(paramsForInteractivity.mouse.distance) pJS.interactivity.mouse.distance = paramsForInteractivity.mouse.distance;\n      }\n      if(paramsForInteractivity.detect_on) pJS.interactivity.detect_on = paramsForInteractivity.detect_on;\n      if(paramsForInteractivity.mode == false || paramsForInteractivity.mode) pJS.interactivity.mode = paramsForInteractivity.mode;\n      if(paramsForInteractivity.line_linked){\n        if(paramsForInteractivity.line_linked.opacity) pJS.interactivity.line_linked.opacity = paramsForInteractivity.line_linked.opacity;\n      }\n      if(paramsForInteractivity.events){\n        var paramsForEvents = paramsForInteractivity.events;\n        if(paramsForEvents.onclick){\n          var paramsForOnclick = paramsForEvents.onclick;\n          if(paramsForOnclick.enable == false) pJS.interactivity.events.onclick.enable = false;\n          if(paramsForOnclick.mode != 'push') pJS.interactivity.events.onclick.mode = paramsForOnclick.mode;\n          if(paramsForOnclick.nb) pJS.interactivity.events.onclick.nb = paramsForOnclick.nb;\n        }\n        if(paramsForEvents.onresize){\n          var paramsForOnresize = paramsForEvents.onresize;\n          if(paramsForOnresize.enable == false) pJS.interactivity.events.onresize.enable = false;\n          if(paramsForOnresize.mode) pJS.interactivity.events.onresize.mode = paramsForOnresize.mode;\n          if(paramsForOnresize.density_auto == false || paramsForOnresize.density_auto) pJS.interactivity.events.onresize.density_auto = paramsForOnresize.density_auto;\n          if(paramsForOnresize.density_area) pJS.interactivity.events.onresize.density_area = paramsForOnresize.density_area;\n        }\n      }\n    }\n    pJS.retina_detect = params.retina_detect;\n  }\n\n  /* convert hex colors to rgb */\n  pJS.particles.color_rgb = hexToRgb(pJS.particles.color);\n  pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\n\n  /* detect retina */\n  if(pJS.retina_detect && window.devicePixelRatio > 1){\n    pJS.retina = true;\n\n    pJS.canvas.pxratio = window.devicePixelRatio\n    pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\n    pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\n    pJS.particles.anim.speed = pJS.particles.anim.speed * pJS.canvas.pxratio;\n    pJS.particles.line_linked.distance = pJS.particles.line_linked.distance * pJS.canvas.pxratio;\n    pJS.particles.line_linked.width = pJS.particles.line_linked.width * pJS.canvas.pxratio;\n    pJS.interactivity.mouse.distance = pJS.interactivity.mouse.distance * pJS.canvas.pxratio;\n  }\n\n\n  /* ---------- CANVAS functions ------------ */\n\n  pJS.fn.canvasInit = function(){\n    pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\n  };\n\n  pJS.fn.canvasSize = function(){\n\n    pJS.canvas.el.width = pJS.canvas.w;\n    pJS.canvas.el.height = pJS.canvas.h;\n\n    window.addEventListener('resize', function(){\n\n      if(pJS && pJS.interactivity.events.onresize.enable){\n\n        pJS.canvas.w = pJS.canvas.el.offsetWidth;\n        pJS.canvas.h = pJS.canvas.el.offsetHeight;\n\n        /* resize canvas */\n        if(pJS.retina){\n          pJS.canvas.w *= pJS.canvas.pxratio;\n          pJS.canvas.h *= pJS.canvas.pxratio;\n        }\n\n        pJS.canvas.el.width = pJS.canvas.w;\n        pJS.canvas.el.height = pJS.canvas.h;\n\n        /* repaint canvas */\n        pJS.fn.canvasPaint();\n        if(!pJS.particles.anim.enable){\n          pJS.fn.particlesRemove();\n          pJS.fn.canvasRemove();\n          launchParticles();\n        }\n\n        /* density particles enabled */\n        pJS.fn.densityAuto();\n\n      }\n\n    });\n\n  };\n\n  pJS.fn.densityAuto = function(){\n    if(pJS.interactivity.events.onresize.density_auto){\n\n      /* calc area */\n      var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\n      if(pJS.retina){\n        area = area/(pJS.canvas.pxratio*2);\n      }\n\n      /* calc number of particles based on density area */\n      var nb_particles = area * pJS.particles.nb / pJS.interactivity.events.onresize.density_area;\n\n      /* show nb_particles (add or remove X particles) */\n      var missing_particles = pJS.particles.array.length - nb_particles;\n      if(missing_particles < 0){\n        pJS.fn.vendors.interactivity.pushParticles(Math.abs(missing_particles));\n      }else{\n        pJS.fn.vendors.interactivity.removeParticles(missing_particles);\n      }\n\n    }\n  };\n\n  pJS.fn.canvasPaint = function(){\n    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n  pJS.fn.canvasRemove = function(){\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  }\n\n\n  /* --------- PARTICLES functions ----------- */\n\n  pJS.fn.particle = function(color, opacity, position){\n\n    /* position */\n    this.x = position ? position.x : Math.random() * pJS.canvas.w;\n    this.y = position ? position.y : Math.random() * pJS.canvas.h;\n\n    /* size */\n    this.radius = (pJS.particles.size_random ? Math.random() : 1) * pJS.particles.size;\n    if (pJS.retina) this.radius *= pJS.canvas.pxratio;\n\n    /* color */\n    if(pJS.particles.color_random){\n      this.color = {\n        r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\n      }\n    }else{\n      this.color = color;\n    }\n\n    /* opacity */\n    this.opacity = opacity;\n    if(pJS.particles.opacity.anim.enable){\n      this.opacity_status = false;\n      this.vo = pJS.particles.opacity.anim.speed / 100;\n      if(!pJS.particles.opacity.anim.sync){\n        this.vo = this.vo * Math.random();\n      }\n    }\n\n    /* animation - velocity for speed */\n    this.vx = -.5 + Math.random();\n    this.vy = -.5 + Math.random();\n\n  };\n\n  pJS.fn.particle.prototype.draw = function() {\n\n    pJS.canvas.ctx.fillStyle = 'rgba('+this.color.r+','+this.color.g+','+this.color.b+','+this.opacity+')';\n    pJS.canvas.ctx.beginPath();\n\n    switch(pJS.particles.shape){\n      case 'circle':\n        pJS.canvas.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      break;\n\n      case 'edge':\n        pJS.canvas.ctx.rect(this.x, this.y, this.radius*2, this.radius*2);\n      break;\n\n      case 'triangle':\n        pJS.canvas.ctx.moveTo(this.x,this.y-this.radius);\n        pJS.canvas.ctx.lineTo(this.x+this.radius,this.y+this.radius);\n        pJS.canvas.ctx.lineTo(this.x-this.radius,this.y+this.radius);\n        pJS.canvas.ctx.closePath();\n      break;\n    }\n\n    pJS.canvas.ctx.fill();\n\n  };\n\n  pJS.fn.particlesCreate = function(){\n    for(var i = 0; i < pJS.particles.nb; i++) {\n      pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color_rgb, pJS.particles.opacity.opacity));\n    }\n  };\n\n  pJS.fn.particlesAnimate = function(){\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      /* the particle */\n      var p = pJS.particles.array[i];\n\n      /* move the particle */\n      p.x += p.vx * (pJS.particles.anim.speed/2);\n      p.y += p.vy * (pJS.particles.anim.speed/2);\n\n      /* change opacity status */\n      if(pJS.particles.opacity.anim.enable) {\n        if(p.opacity_status == true) {\n          if(p.opacity >= pJS.particles.opacity.opacity) p.opacity_status = false;\n          p.opacity += p.vo;\n        }else {\n          if(p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\n          p.opacity -= p.vo;\n        }\n      }\n\n      /* change particle position if it is out of canvas */\n      switch(pJS.interactivity.events.onresize.mode){\n        case 'bounce':\n          if (p.x - p.radius > pJS.canvas.w) p.vx = -p.vx;\n          else if (p.x + p.radius < 0) p.vx = -p.vx;\n          if (p.y - p.radius > pJS.canvas.h) p.vy = -p.vy;\n          else if (p.y + p.radius < 0) p.vy = -p.vy;\n        break;\n\n        case 'out':\n          if(p.x - p.radius > pJS.canvas.w) p.x = p.radius;\n          else if(p.x + p.radius < 0) p.x = pJS.canvas.w + p.radius;\n          if(p.y - p.radius > pJS.canvas.h) p.y = p.radius;\n          else if(p.y + p.radius < 0) p.y = pJS.canvas.h + p.radius;\n        break;\n      }\n\n\n      /* Check distance between each particle and mouse position */\n      for(var j = i + 1; j < pJS.particles.array.length; j++){\n        var p2 = pJS.particles.array[j];\n\n        /* link particles if enable */\n        if(pJS.particles.line_linked.enable_auto){\n          pJS.fn.vendors.distanceParticles(p,p2);\n        }\n\n        /* set interactivity if enable */\n        if(pJS.interactivity.enable){\n\n          /* interactivity mode */\n          switch(pJS.interactivity.mode){\n            case 'grab':\n              pJS.fn.vendors.interactivity.grabParticles(p,p2);\n            break;\n          }\n\n        }\n\n\n      }\n    }\n  };\n\n  pJS.fn.particlesDraw = function(){\n    /* clear canvas */\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\n    /* move particles */\n    pJS.fn.particlesAnimate();\n\n    /* draw each particle */\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p = pJS.particles.array[i];\n      p.draw('rgba('+p.color.r+','+p.color.g+','+p.color.b+','+p.opacity+')');\n    }\n\n  };\n\n  pJS.fn.particlesRemove = function(){\n    pJS.particles.array = [];\n  };\n\n\n  /* ---------- VENDORS functions ------------ */\n\n  pJS.fn.vendors.distanceParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    /* Check distance between particle and mouse mos */\n    if(dist <= pJS.particles.line_linked.distance) {\n\n      /* draw the line */\n      var color_line = pJS.particles.line_linked.color_rgb_line;\n      pJS.canvas.ctx.beginPath();\n      pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+ (pJS.particles.line_linked.opacity-dist/pJS.particles.line_linked.distance) +')';\n      pJS.canvas.ctx.moveTo(p1.x, p1.y);\n      pJS.canvas.ctx.lineTo(p2.x, p2.y);\n      pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n      pJS.canvas.ctx.stroke();\n      pJS.canvas.ctx.closePath();\n\n      /* condensed particles */\n      if(pJS.particles.line_linked.condensed_mode.enable){\n        var dx = p1.x - p2.x,\n            dy = p1.y - p2.y,\n            ax = dx/(pJS.particles.line_linked.condensed_mode.rotateX*1000),\n            ay = dy/(pJS.particles.line_linked.condensed_mode.rotateY*1000);\n        p2.vx += ax;\n        p2.vy += ay;\n      }\n\n    }\n\n  };\n\n  pJS.fn.vendors.interactivity.listeners = function(){\n\n    /* init el */\n    if(pJS.interactivity.detect_on == 'window'){\n      var detect_el = window;\n    }else{\n      var detect_el = pJS.canvas.el;\n    }\n\n    /* el on mousemove */\n    detect_el.onmousemove = function(e){\n\n      if(detect_el == window){\n        var pos_x = e.clientX,\n            pos_y = e.clientY;\n      }\n      else{\n        var pos_x = e.offsetX||e.clientX,\n            pos_y = e.offsetY||e.clientY;\n      }\n\n      if(pJS){\n\n        pJS.interactivity.mouse.pos_x = pos_x;\n        pJS.interactivity.mouse.pos_y = pos_y;\n\n        if(pJS.retina){\n          pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\n          pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\n        }\n\n        pJS.interactivity.status = 'mousemove';\n      }\n\n    };\n\n    /* el on onmouseleave */\n    detect_el.onmouseleave = function(e){\n\n      if(pJS){\n        pJS.interactivity.mouse.pos_x = 0;\n        pJS.interactivity.mouse.pos_y = 0;\n        pJS.interactivity.status = 'mouseleave';\n      }\n\n    };\n\n    /* el on onclick */\n    if(pJS.interactivity.events.onclick.enable){\n      switch(pJS.interactivity.events.onclick.mode){\n        case 'push':\n          detect_el.onclick = function(e){\n            pJS.fn.vendors.interactivity.pushParticles(pJS.interactivity.events.onclick.nb, pJS.interactivity.mouse);\n          }\n        break;\n\n        case 'remove':\n          detect_el.onclick = function(e){\n            pJS.fn.vendors.interactivity.removeParticles(pJS.interactivity.events.onclick.nb);\n          }\n        break;\n      }\n    }\n  };\n\n  pJS.fn.vendors.interactivity.pushParticles = function(nb, pos){\n    if(pJS){\n      for(var i = 0; i < nb; i++){\n        pJS.particles.array.push(\n          new pJS.fn.particle(\n            pJS.particles.color_rgb,\n            pJS.particles.opacity.opacity,\n            {\n              'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\n              'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\n            }\n          )\n        )\n      }\n    }\n  };\n\n  pJS.fn.vendors.interactivity.removeParticles = function(nb){\n    if(pJS){\n      pJS.particles.array.splice(0, nb);\n    }\n  };\n\n\n  pJS.fn.vendors.interactivity.grabParticles = function(p1, p2){\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    var dx_mouse = p1.x - pJS.interactivity.mouse.pos_x,\n        dy_mouse = p1.y - pJS.interactivity.mouse.pos_y,\n        dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n    /* Check distance between 2 particles + Check distance between 1 particle and mouse position */\n    if(dist <= pJS.particles.line_linked.distance && dist_mouse <= pJS.interactivity.mouse.distance && pJS.interactivity.status == 'mousemove'){\n      /* Draw the line */\n      var color_line = pJS.particles.line_linked.color_rgb_line;\n      pJS.canvas.ctx.beginPath();\n      pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+ (pJS.interactivity.line_linked.opacity-dist_mouse/pJS.interactivity.mouse.distance) +')';\n      pJS.canvas.ctx.moveTo(p1.x, p1.y);\n      pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\n      pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n      pJS.canvas.ctx.stroke();\n      pJS.canvas.ctx.closePath();\n    }\n  };\n\n  pJS.fn.vendors.destroy = function(){\n    cancelAnimationFrame(pJS.fn.requestAnimFrame);\n    canvas_el.remove();\n    pJS = null;\n  };\n\n\n  /* --------- LAUNCH ----------- */\n\n  function launchParticles(){\n    pJS.fn.canvasInit();\n    pJS.fn.canvasSize();\n    pJS.fn.canvasPaint();\n    pJS.fn.particlesCreate();\n    pJS.fn.particlesDraw();\n    pJS.fn.densityAuto();\n  };\n\n\n  function launchAnimation(){\n    pJS.fn.particlesDraw();\n    pJS.fn.requestAnimFrame = requestAnimFrame(launchAnimation);\n  };\n\n\n  launchParticles();\n\n  if(pJS.particles.anim.enable){\n    launchAnimation();\n  }\n\n  if(pJS.interactivity.enable){\n    pJS.fn.vendors.interactivity.listeners();\n  }\n\n\n};\n\n/* --- VENDORS --- */\n\nwindow.requestAnimFrame = (function(){\n  return  window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    function(callback){\n      window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelRequestAnimFrame = ( function() {\n  return window.cancelAnimationFrame         ||\n    window.webkitCancelRequestAnimationFrame ||\n    window.mozCancelRequestAnimationFrame    ||\n    window.oCancelRequestAnimationFrame      ||\n    window.msCancelRequestAnimationFrame     ||\n    clearTimeout\n} )();\n\nfunction hexToRgb(hex){\n  // By Tim Down - http://stackoverflow.com/a/5624139/3493650\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n     return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n  } : null;\n};\n\n\n/* --- LAUNCH --- */\n\nwindow.particlesJS = function(tag_id, params){\n\n  /* no string id? so it's object params, and set the id with default id */\n  if(typeof(tag_id) != 'string'){\n    params = tag_id;\n    tag_id = 'particles-js';\n  }\n\n  /* no id? set the id to default id */\n  if(!tag_id){\n    tag_id = 'particles-js';\n  }\n\n  /* create canvas element */\n  var canvas_el = document.createElement('canvas');\n\n  /* set size canvas */\n  canvas_el.style.width = \"100%\";\n  canvas_el.style.height = \"100%\";\n\n  /* append canvas */\n  var canvas = document.getElementById(tag_id).appendChild(canvas_el);\n\n  /* launch particle.js */\n  if(canvas != null){\n    launchParticlesJS(tag_id, params);\n  }\n\n};","require(\"./lib/particles.js\");\n\nparticlesJS('particles', {\n  particles: {\n    color: '#334449',\n    color_random: false,\n    shape: 'circle', // \"circle\", \"edge\" or \"triangle\"\n    opacity: {\n      opacity: 1,\n      anim: {\n        enable: false,\n        speed: 1.5,\n        opacity_min: 0,\n        sync: false\n      }\n    },\n    size: 5,\n    size_random: true,\n    nb: 125,\n    line_linked: {\n      enable_auto: true,\n      distance: 125,\n      color: '#273233',\n      opacity: 1,\n      width: 1,\n      condensed_mode: {\n        enable: true,\n        rotateX: 600,\n        rotateY: 600\n      }\n    },\n    anim: {\n      enable: true,\n      speed: .35\n    }\n  },\n  interactivity: {\n    enable: false,\n    events: {\n      onclick: {\n        enable: true,\n        mode: 'push', // \"push\" or \"remove\"\n        nb: 1\n      },\n      onresize: {\n        enable: true,\n        mode: 'bounce', // \"out\" or \"bounce\"\n        density_auto: true,\n        density_area: 600 // nb_particles = particles.nb * (canvas width *  canvas height / 1000) / density_area\n      }\n    }\n  },\n  /* Retina Display Support */\n  retina_detect: true\n});\n"]}